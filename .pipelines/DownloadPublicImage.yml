trigger: none
pr: none

pool: sonic-image-builder-1ES

parameters:
- name: 'platforms'
  type: object
  default:
  - broadcom: sonic-aboot-broadcom.swi.log sonic-aboot-broadcom.swi sonic-broadcom.bin docker-syncd-brcm-rpc.gz debs/buster/python-saithrift_0.9.4_amd64.deb
  - mellanox: sonic-mellanox.bin.log sonic-mellanox.bin
  - marvell-armhf: sonic-marvell-armhf.bin.log sonic-marvell-armhf.bin
- name: 'branch'
  default: 'master'

variables:
- group: SONIC-BUILD-VG-1

steps:
- checkout: self
  clean: true
- ${{each platform in parameters.platforms}}:
  - ${{ each pair in platform }}:
    - task: SSH@0
      displayName: "========= ${{ pair.key }} ========="
      condition: always()
      inputs: 
        sshEndpoint: 'acs-trusty8'
        runOptions: 'inline'
        readyTimeout: '20000'
        inline: |
          latest_commit_id=
          if [ -f /data/installer/sonic/${{ pair.key }}/public/sonic-${{ pair.key }}.bin ];then
            latest_commit_id=$(ls -al /data/installer/sonic/${{ pair.key }}/public/sonic-${{ pair.key }}.bin | awk -F' ' '{print$NF}' | grep -Eo "${{ parameters.branch }}.*" | sed 's/.bin//' | sed 's/${{ parameters.branch }}.[0-9]*-//')
          fi
          echo "##vso[task.setvariable variable=TRUSTY8_LATEST_COMMIT_ID]$latest_commit_id"
          echo "##vso[task.setvariable variable=SKIP]false"
          echo TRUSTY8_LATEST_COMMIT_ID: $latest_commit_id
    - script: |
        set -e
        image_version=
        commit_id=
        for target_file in ${{ pair.value }};do
          mkdir -p ${{ pair.key }}/target
          target=$(basename $target_file)
          echo ================ Downloading $target_file ================
          wget --no-verbose -O ${{ pair.key }}/target/$target "https://sonic-build.azurewebsites.net/api/sonic/artifacts?branchName=${{ parameters.branch }}&platform=${{ pair.key }}&target=target/$target_file"
          # get latest public version for this platform
          if [ -z $image_version ];then
            image_version=$(grep "\<IMAGE_VERSION=" ${{ pair.key }}/target/sonic-*.log | awk -F= '{print$2}' | head -1)
            echo "##vso[task.setvariable variable=IMAGE_VERSION]$image_version"
            commit_id=$(echo $image_version | sed 's/${{ parameters.branch }}.[0-9]*-//')
            echo ================ Check Version ================
            echo TRUSTY8 LATEST COMMIT ID: $(TRUSTY8_LATEST_COMMIT_ID)
            echo PUBLIC LATEST COMMIT ID: $commit_id
            # check if trusty8 already has latest build. 
            if [[ "$commit_id" == "$(TRUSTY8_LATEST_COMMIT_ID)" ]];then
              echo "##vso[task.setvariable variable=SKIP]true"
              exit 0
            fi
          fi
        done
        rm ${{ pair.key }}/target/sonic-*.log
        # add version info in file name
        for tgt in ${{ pair.value }}; do
          # skip log file and docker image file
          if [[ $tgt == *.log ]] || [[ $tgt == *.gz ]];then
              continue
          fi
          target=$(basename ${tgt})
          extension="${target##*.}"
          filename="${target%.*}"
          mv ${{ pair.key }}/target/${target} ${{ pair.key }}/target/${filename}-${image_version}.${extension}
        done
      displayName: 'Download ${{ pair.key }} artifacts'
      condition: always()
    - script: |
        PORT=443
        SONIC_VERSION="$(date "+%Y%m%d").01"
        for f in ${{ pair.value }}; do
          if [[ $f == *.gz ]];then
            echo $f
            BUILD_NUMBER=$(Build.BuildNumber) ./push_docker.sh ${{ pair.key }}/target/$f $REGISTRY_SERVER $PORT $REGISTRY_USERNAME "$REGISTRY_PASSWD" $SONIC_VERSION ${{ parameters.branch }}
          fi
        done
      displayName: 'Push docker registry'
      env:
        REGISTRY_PASSWD: $(REGISTRY_PASSWD)
      condition: always()
    - task: CopyFilesOverSSH@0
      condition: ne(variables.SKIP, 'true')
      inputs:
        sshEndpoint: 'acs-trusty8'
        sourceFolder: '${{ pair.key }}/target/'
        contents: |
          **
          !*.log
          !*.gz
        targetFolder: '/data/installer/sonic/${{ pair.key }}/public/'
        readyTimeout: '20000'
    - task: SSH@0
      condition: ne(variables.SKIP, 'true')
      displayName: "Remove ${{ pair.key }} old image"
      inputs:
        sshEndpoint: 'acs-trusty8'
        runOptions: 'inline'
        readyTimeout: '20000'
        inline: |
          cd /data/installer/sonic/${{ pair.key }}/public/
          for tgt in ${{ pair.value }}; do
            # skip log file and docker image file
            if [[ $tgt == *.log ]] || [[ $tgt == *.gz ]];then
              continue
            fi
            # remove folder path
            target=$(basename ${tgt})
            # remove head *. two times
            extension="${target##*.}"
            # remove tail .*
            filename="${target%.*}"
            tc=$(expr $(ls -al ${filename}-*.${extension} | wc -l) - $(IMAGE_KEEP_NUM))
            if (( $tc > 0 ));then
              ls -alt ${filename}-*.${extension} | tail -n $tc | awk '{print$NF}' | xargs -i rm {}
            fi
            if [ -f ${target} ];then
              mv ${target} ${target}.PREV.1
            fi
            ln -sf ${filename}-$(IMAGE_VERSION).${extension} ${target}
          done
