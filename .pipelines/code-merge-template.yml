parameters:
  - name: repo
    type: string
  - name: remote_url
    type: string
steps:
  - checkout: ${{parameters.repo}}
    clean: true
    persistCredentials: true
  - bash: |
      FAILED=""
      git remote add target ${{parameters.remote_url}}
      git remote update || exit 1
      git config --global user.email "svc-acs@microsoft.com"
      git config --global user.name "Sonic Automation"

      target_branches="master 201811 201911 `git ls-remote target refs/heads/202??? 2>/dev/null | cut -d/ -f3`"
      for branch in $target_branches; do
        base_branch=shilongliu/internal-${branch}
        target_branch=${branch}
        if [[ ${base_branch} == "shilongliu/internal-master" ]];then
          base_branch=shilongliu/internal
        fi
        git ls-remote origin refs/heads/${base_branch} || continue

        echo "=======Start merging. branch: ${base_branch}======="
        git checkout -b ${base_branch} --track origin/${base_branch} || continue
        curr_tag="${base_branch}-`date '+%Y%m%d-%H%M'`.pre-merge"
        post_tag="${base_branch}-`date '+%Y%m%d-%H%M'`.post-merge"
        git tag ${curr_tag}

        git pull target ${target_branch} --no-edit || (git merge --abort;FAILED="${FAILED} ${base_branch}"; continue)

        head_tag=`git tag --contains HEAD`
        tem=`echo ${head_tag} | grep ${curr_tag}`
        if [[ ${tem} != "" ]];then
          echo "======No change after rebasing ...======"
          continue
        else
          git tag ${post_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        fi
        git push origin ${curr_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        git push origin ${post_tag} || (FAILED="${FAILED} ${base_branch}"; continue)
        git push origin ${base_branch} || (FAILED="${FAILED} ${base_branch}"; continue)
      done

      if [[ ${FAILED} != "" ]];then
        echo "======Failed to merge following branches: ${FAILED} ...======"
        exit 1
      fi
